{"version":3,"sources":["components/useKeyPress.js","components/Todo.js","components/useOnClickOutside.js","App.js","reportWebVitals.js","index.js"],"names":["useKeyPress","targetKey","useState","keyPressed","setKeyPressed","enterDownHandler","key","enterUpHandler","useEffect","window","addEventListener","removeEventListener","Task","ref","handler","task","index","onDragStart","onDragEnd","remove","complete","onEditEnd","buttonShow","setButtonShow","isInputActive","setIsInputActive","title","inputValue","setInputValue","inputRef","useRef","wrapperRef","enter","esc","listener","event","current","contains","target","document","console","log","focus","className","onMouseEnter","e","onMouseLeave","onClick","draggable","style","textDecoration","completed","border","Form","Control","as","value","onChange","ButtonGroup","Button","variant","size","icon","faCheck","faTrash","CreateTask","add","setValue","onSubmit","preventDefault","type","placeholder","Todo","tasksRemaining","setTasksRemaining","tasks","setTasks","draggedItem","setDraggedItem","filter","length","Container","newTasks","splice","ListGroup","onDragOver","map","Item","draggedOverItem","items","item","dataTransfer","effectAllowed","setData","parentNode","setDragImage","newTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d7cb28a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useKeyPress(targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n  function enterDownHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n  const enterUpHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", enterDownHandler);\n    window.addEventListener(\"keyup\", enterUpHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", enterDownHandler);\n      window.removeEventListener(\"keyup\", enterUpHandler);\n    };\n  }, []); \n  return keyPressed;\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, ListGroup, Container, ButtonGroup, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport useKeyPress from './useKeyPress';\nimport useOnClickOutside from './useOnClickOutside';\n\nimport './Todo.css';\n\nfunction Task({ task, index, onDragStart, onDragEnd, remove, complete, onEditEnd }) {\n  const [buttonShow, setButtonShow] = useState(false);\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(task.title)\n\n  const inputRef = useRef(null);\n  const wrapperRef = useRef(null)\n  const enter = useKeyPress('Enter');\n  const esc = useKeyPress('Escape');\n\n  useOnClickOutside(wrapperRef, () => setIsInputActive(false));\n  useEffect(() => {\n    console.log('Task: ', task)\n    if (isInputActive) {\n      inputRef.current.focus();\n      if (enter) {\n        onEditEnd(index, inputValue);\n        setIsInputActive(false);\n      }\n      if (esc) {\n        setIsInputActive(false);\n      }\n    }\n    else {\n      setInputValue(task.title);\n    }\n  }, [isInputActive, enter, esc, task, index, inputValue, onEditEnd]);\n\n  return (\n    <div\n      className='row p-0'\n      onMouseEnter={(e) => setButtonShow(true)}\n      onMouseLeave={(e) => setButtonShow(false)}\n      >\n      <div \n        className='title'\n        ref={wrapperRef}\n        onClick={() => setIsInputActive(true)}\n        draggable\n        onDragStart={onDragStart}\n        onDragEnd={onDragEnd}\n          style={{ textDecoration: task.completed ? \"line-through\" : \"\", border: 0 }}\n        >\n      { isInputActive ?\n      <Form.Control\n      ref={inputRef}\n      as='input'\n      value={inputValue}\n      onChange={e=>{setInputValue(e.target.value)}}\n      />\n      : inputValue\n        }\n        </div>\n      <div className='button p-0'>\n      {buttonShow?\n      <ButtonGroup className='float-right'>\n        <Button variant=\"outline-primary\" size='sm' onClick={complete}>\n          <FontAwesomeIcon icon={faCheck} />\n        </Button>\n        <Button variant=\"outline-primary\" size='sm' onClick={remove}>\n          <FontAwesomeIcon icon={faTrash} />\n        </Button>\n      </ButtonGroup>\n      : ''\n      }\n      </div>\n    </div>\n  );\n}\nfunction CreateTask({ add }) {\n  const [value, setValue] = useState();\n  console.log('value: ', value)\n\n  const submit = e => {\n    e.preventDefault();\n    if (!value) return;\n    add(value);\n    setValue('');\n  }\n\n  return (\n    <form onSubmit={submit}>\n      <input\n        type=\"text\"\n        className='form-control border border-primary mb-3'\n        value={value}\n        placeholder=\"Add a new task\"\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nconst Todo = () => {\n  const [tasksRemaining, setTasksRemaining] = useState(0);\n  const [tasks, setTasks] = useState([{title: 'test1', completed: false},{title: 'test2', completed: false}, {title: 'test3', completed: false}]);\n  const [draggedItem, setDraggedItem] = useState();\n  \n  useEffect(() => { \n    setTasksRemaining(tasks.filter(task => !task.completed).length) \n    console.log('Todo tasks: ', tasks)\n  }, [tasks, setTasks]);\n\n  const add = title => {\n    const newTasks = [...tasks];\n    newTasks.splice(tasksRemaining, 0, { title, complete: false });\n    setTasks(newTasks);\n  };\n\n  const complete = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n\n  const remove = index => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  const onDragStart = (e, index) => {\n    setDraggedItem(tasks[index]);\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  };\n\n  const onDragOver = (e, index) => {\n    e.preventDefault();\n    const draggedOverItem = tasks[index];\n    if (!draggedItem || (draggedItem === draggedOverItem)) {\n      return;\n    }\n    let items = tasks.filter((item) => item !== draggedItem);\n    items.splice(index, 0, draggedItem);\n\n    setTasks(items);\n  };\n\n  const onDragEnd = (e, index) => {\n    setDraggedItem(null);\n  };\n\n  const onEditEnd = (index, newTask) => {\n    console.log('onEditEnd: ', index, ' ', newTask)\n    let items = tasks;\n    items[index].title = newTask;\n\n    setTasks(items);\n    console.log('onEditEnd Tasks:', tasks)\n  };\n\n  return (\n    <Container className=\"vh-100 row mx-auto\">\n      <div className=\"header align-self-end\">\n      </div>\n      <div className=\"tasks align-self-center\">\n        Pending tasks ({tasksRemaining})\n        <CreateTask add={add} />\n        <ListGroup \n          onDragOver={(e)=>e.preventDefault}\n          style={{'listStyleType': 'none'}}\n          className='shadow-sm'\n        >\n        {tasks.map((task, index) => (\n          <ListGroup.Item \n            key={index}\n            onDragOver={(e) => onDragOver(e, index)}\n            >\n               <Task\n                  task={task}\n                  index={index}\n                  onDragStart={(e) => onDragStart(e, index)}\n                  onDragEnd={e=>onDragEnd(e, index)}\n                  remove={()=>remove(index)}\n                  complete={()=>complete(index)}\n                  onEditEnd={(index, newTask)=>onEditEnd(index, newTask)}\n                />\n          </ListGroup.Item>\n        ))}\n        </ListGroup>\n      </div>\n      <div className=\"create-task align-self-start\" >\n      </div>\n    </Container>\n  );\n}\n\nexport default Todo;","import { useEffect } from \"react\";\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener);\n      // document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        // document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}